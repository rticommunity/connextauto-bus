<?xml version="1.0" encoding="utf-8"?>
<!--  
-******************************************************************************
- (C) Copyright 2020-2022 Real-Time Innovations, Inc.  All rights reserved.
-
- The use of this software is governed by the terms specified in the
- RTI Labs License Agreement, available at https://www.rti.com/terms/RTILabs.
-
- By accessing, downloading, or otherwise using this software, you agree to
- be bound by those terms.
-*****************************************************************************
-->
<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://community.rti.com/schema/7.3.0/rti_dds_qos_profiles.xsd">

    <qos_library name="FlowQosLib">

        <!-- Streams : Stream/* -->
        <qos_profile name="Stream" base_name="BuiltinQosLib::Generic.BestEffort">
            <datareader_qos>
                <history>
                    <depth>10</depth>
                </history>
            </datareader_qos>
            <datawriter_qos>
                <history>
                    <depth>1</depth>
                </history>
            </datawriter_qos>
        </qos_profile>

        <!-- Events : Event/*
        -->
        <qos_profile name="Event" base_name="BuiltinQosLib::Generic.StrictReliable">
            <!-- may BLOCK writer for ReliabilityQosPolicy::max_blocking_time -->
        </qos_profile>

        <!-- Events : Alarm/*
        -->
        <qos_profile name="Alarm" base_name="BuiltinQosLib::Generic.KeepLastReliable.TransientLocal">
            <datareader_qos>
                <history>
                    <depth>3</depth>
                </history>
            </datareader_qos>
            <datawriter_qos>
                <history>
                    <depth>1</depth>
                </history>
            </datawriter_qos>
        </qos_profile>


        <!-- Command: Command/*
                - Desired state, Goal state, Objective state
                - Request for an intended state
        -->
        <qos_profile name="Command" base_name="BuiltinQosLib::Generic.KeepLastReliable">
            <datareader_qos>
                <ownership>
                    <kind>EXCLUSIVE_OWNERSHIP_QOS</kind>
                </ownership>
                <history>
                    <depth>1</depth>
                </history>
            </datareader_qos>
            <datawriter_qos>
                <ownership>
                    <kind>EXCLUSIVE_OWNERSHIP_QOS</kind>
                </ownership>
                <history>
                    <depth>1</depth>
                </history>
            </datawriter_qos>
        </qos_profile>


        <!-- Status: Status/*
                - Monitored, e.g. Health, May have history
        -->
        <qos_profile name="Status"
            base_name="BuiltinQosLib::Generic.KeepLastReliable.TransientLocal">
            <datareader_qos>
                <history>
                    <depth>3</depth>
                </history>
            </datareader_qos>
            <datawriter_qos>
                <history>
                    <depth>1</depth>
                </history>
            </datawriter_qos>
        </qos_profile>


        <!-- State : State/*
                - State needed for failover and recovery
                - TRANSIENT (requires Persistence Service)
        -->
        <qos_profile name="State" base_name="BuiltinQosLib::Generic.KeepLastReliable.Transient">
            <datareader_qos>
                <history>
                    <depth>1</depth>
                </history>
            </datareader_qos>
            <datawriter_qos>
                <history>
                    <!-- data + dispose + unregister -->
                    <depth>3</depth>
                </history>
            </datawriter_qos>
        </qos_profile>


        <!-- Configuration : Config/* 
                - Initial Configuration needed for startup
                - Persistent Parameters
                - PERSISTENT (requires Persistence Service)
        -->
        <qos_profile name="Configuration"
            base_name="BuiltinQosLib::Generic.KeepLastReliable.Persistent">
            <datareader_qos>
                <history>
                    <depth>1</depth>
                </history>
            </datareader_qos>
            <datawriter_qos>
                <history>
                    <!-- data + dispose + unregister -->
                    <depth>3</depth>
                </history>
            </datawriter_qos>
        </qos_profile>


        <!-- Logging : Log/* -->
        <qos_profile name="Log" base_name="BuiltinQosLib::Generic.KeepLastReliable">
            <datawriter_qos>
                <history>
                    <!-- don't block the writer -->
                    <depth>128</depth>
                </history>
            </datawriter_qos>
        </qos_profile>


        <!-- Service Request: Service/Request/*
        -->
        <qos_profile name="Request" base_name="BuiltinQosLib::Generic.StrictReliable">
            <datareader_qos>
                <!-- KEEP_ALL history: don't drop any requests -->
            </datareader_qos>
            <datawriter_qos>
                <!-- Requested Objective -->
                <history>
                    <!-- don't block the writer -->
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <!-- one command (Requested Objective) outstanding -->
                    <depth>3</depth>
                </history>
            </datawriter_qos>
        </qos_profile>

        <!-- Service Response: Service/Response/*
                - Command-Response
                - Objective State 
        -->
        <qos_profile name="Response" base_name="Request">
            <datareader_qos>
                <!-- KEEP_ALL history: don't drop any responses -->
            </datareader_qos>
            <datawriter_qos>
                <!-- Objective -->
                <history>
                    <!-- don't block the writer -->
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <!-- N responses (Objectives) outstanding -->
                    <depth>3</depth>
                </history>
            </datawriter_qos>
        </qos_profile>


        <!-- Participant -->
        <qos_profile name="Participant" base_name="BuiltinQosLib::Generic.Participant.LargeData" />

    </qos_library>
</dds>
